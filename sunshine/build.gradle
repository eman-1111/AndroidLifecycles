apply plugin: 'com.android.application'

android {
    compileSdkVersion 27

    flavorDimensions "versionCode"
    defaultConfig {
        applicationId "com.example.android.sunshine"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        jackOptions {
//            enabled true
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// Versions number variables are defined in the module build.gradle file
dependencies {
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:preference-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.firebase:firebase-jobdispatcher:$firebase_jobdispatcher_version"

    // Instrumentation dependencies use androidTestCompile"
    // (as opposed to testCompile for local unit tests run in the JVM"
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support:support-annotations:$support_version"
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$runnerVersion"

    implementation 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion;
    annotationProcessor 'android.arch.persistence.room:compiler:' + rootProject.archRoomVersion;

    implementation 'android.arch.lifecycle:runtime:' + rootProject.archLifecycleVersion;
    implementation 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion;
    annotationProcessor 'android.arch.lifecycle:compiler:' + rootProject.archLifecycleVersion;

}
